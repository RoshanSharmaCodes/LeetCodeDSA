class Node{
    constructor(val){
        this.val = val;
        this.next = null;
    }
}

class Stack{
    constructor(){
    this.head = null;
    this.tail = null;
    this.size = 0;    
    }
    
    print(){
        var arr = [];
        var curr = this.head;
        while(curr){
            arr.push(curr.val);
            curr = curr.next;
        }
        console.log(arr);
    }
    
    enqueue(val){
        var node = new Node(val)
        if(!this.head){
            this.head = node;
            this.head = node;
        }
        else{
            var temp = this.head;
            this.head = node;
            node.next = temp;
        }
        this.size++;
    }
    
    dequeue(){
        if(!this.head) return undefined;
        this.head = this.head.next;
        this.size--;
    }
}

var  stack = new Stack;
stack.enqueue(2);
stack.enqueue(4);
stack.enqueue(3);
stack.enqueue(7);
stack.print();
stack.dequeue()
stack.dequeue()
console.log(stack.size);
stack.print();